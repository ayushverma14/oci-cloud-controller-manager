---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cloud-controller-manager
  namespace: bmcs
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: system::leader-locking-cloud-controller-manager
  namespace: bmcs
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  verbs:
  - create
  - watch
- apiGroups:
  - ""
  resourceNames:
  - cloud-controller-manager
  resources:
  - configmaps
  - endpoints
  verbs:
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: system::leader-locking-cloud-controller-manager
  namespace: bmcs
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: system::leader-locking-cloud-controller-manager
subjects:
- kind: ServiceAccount
  name: cloud-controller-manager
  namespace: bmcs
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: bmcs-cloud-controller-manager
rules:
- apiGroups:
  - ""
  resources:
  - "*"
  verbs:
  - "*"
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: bmcs-cloud-controller-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: bmcs-cloud-controller-manager
subjects:
- kind: ServiceAccount
  name: cloud-controller-manager
  namespace: bmcs
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: bmcs-cloud-controller-manager-ds
  namespace: bmcs
  labels:
    tier: node
    app: bmcs-cloud-controller-manager
spec:
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        tier: node
        app: bmcs-cloud-controller-manager
    spec:
      hostNetwork: true
      nodeSelector:
        node-role.kubernetes.io/master: ""
      tolerations:
      - key: node.cloudprovider.kubernetes.io/uninitialized
        value: "true"
        effect: NoSchedule
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      serviceAccountName: cloud-controller-manager
      imagePullSecrets:
        - name: odx-docker-pull-secret
      containers:
        - name: bmcs-cloud-controller-manager
          imagePullPolicy: "Always"
          image: {{REGISTRY}}/bmcs-cloud-controller-manager:{{VERSION}}
          args:
            - --cloud-config=/etc/bmcs/cloud-config.cfg
            - --cluster-cidr=10.244.0.0/16
            - --cloud-provider=external
            - -v=4
          volumeMounts:
            - name: etcssl
              mountPath: /etc/ssl
              readOnly: true
            - name: cfg
              mountPath: /etc/bmcs
              readOnly: true
            - name: kubernetes
              mountPath: /etc/kubernetes
              readOnly: true
            - name: secret
              mountPath: /etc/pem
              readOnly: true
      volumes:
        - name: etcssl
          hostPath:
            path: /etc/ssl
        - name: cfg
          configMap:
            name: bmcs-cloud-controller-manager-config
        - name: kubernetes
          hostPath:
            path: /etc/kubernetes
        - name: secret
          secret:
            secretName: bmcs-api-key
