// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bmcs.proto

package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type BMConfig struct {
	UserOCID    string `protobuf:"bytes,1,opt,name=UserOCID" json:"UserOCID,omitempty"`
	Fingerprint string `protobuf:"bytes,2,opt,name=Fingerprint" json:"Fingerprint,omitempty"`
	PrivateKey  []byte `protobuf:"bytes,3,opt,name=PrivateKey,proto3" json:"PrivateKey,omitempty"`
	Tenancy     string `protobuf:"bytes,4,opt,name=Tenancy" json:"Tenancy,omitempty"`
	Region      string `protobuf:"bytes,5,opt,name=Region" json:"Region,omitempty"`
}

func (m *BMConfig) Reset()                    { *m = BMConfig{} }
func (m *BMConfig) String() string            { return proto.CompactTextString(m) }
func (*BMConfig) ProtoMessage()               {}
func (*BMConfig) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *BMConfig) GetUserOCID() string {
	if m != nil {
		return m.UserOCID
	}
	return ""
}

func (m *BMConfig) GetFingerprint() string {
	if m != nil {
		return m.Fingerprint
	}
	return ""
}

func (m *BMConfig) GetPrivateKey() []byte {
	if m != nil {
		return m.PrivateKey
	}
	return nil
}

func (m *BMConfig) GetTenancy() string {
	if m != nil {
		return m.Tenancy
	}
	return ""
}

func (m *BMConfig) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

// Bucket is the smallest divisible part of Object store. Each
// bucket belongs to a namespace.
type Bucket struct {
	Namespace       string `protobuf:"bytes,1,opt,name=Namespace" json:"Namespace,omitempty"`
	Name            string `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	CompartmentOCID string `protobuf:"bytes,3,opt,name=CompartmentOCID" json:"CompartmentOCID,omitempty"`
}

func (m *Bucket) Reset()                    { *m = Bucket{} }
func (m *Bucket) String() string            { return proto.CompactTextString(m) }
func (*Bucket) ProtoMessage()               {}
func (*Bucket) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *Bucket) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *Bucket) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Bucket) GetCompartmentOCID() string {
	if m != nil {
		return m.CompartmentOCID
	}
	return ""
}

func init() {
	proto.RegisterType((*BMConfig)(nil), "types.BMConfig")
	proto.RegisterType((*Bucket)(nil), "types.Bucket")
}

func init() { proto.RegisterFile("bmcs.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 251 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0xdf, 0x4a, 0xc3, 0x30,
	0x14, 0xc6, 0xa9, 0xdb, 0xea, 0x76, 0x14, 0x84, 0x73, 0x21, 0x41, 0x44, 0xca, 0xae, 0x7a, 0x63,
	0x87, 0xec, 0x0d, 0x5a, 0x11, 0x44, 0xfc, 0x43, 0xd1, 0x1b, 0xef, 0xd2, 0x78, 0x2c, 0x61, 0x26,
	0x27, 0x24, 0x51, 0xe8, 0xab, 0xf8, 0xb4, 0xb2, 0x50, 0x75, 0xec, 0x22, 0x90, 0xdf, 0xef, 0x23,
	0xe4, 0x9c, 0x0f, 0xa0, 0x33, 0x2a, 0x54, 0xce, 0x73, 0x64, 0x9c, 0xc5, 0xc1, 0x51, 0x58, 0x7e,
	0x67, 0x30, 0xaf, 0xef, 0x1b, 0xb6, 0xef, 0xba, 0xc7, 0x33, 0x98, 0xbf, 0x04, 0xf2, 0x8f, 0xcd,
	0xed, 0xb5, 0xc8, 0x8a, 0xac, 0x5c, 0xb4, 0x7f, 0x8c, 0x05, 0x1c, 0xdd, 0x68, 0xdb, 0x93, 0x77,
	0x5e, 0xdb, 0x28, 0x0e, 0x52, 0xbc, 0xab, 0xf0, 0x02, 0xe0, 0xc9, 0xeb, 0x2f, 0x19, 0xe9, 0x8e,
	0x06, 0x31, 0x29, 0xb2, 0xf2, 0xb8, 0xdd, 0x31, 0x28, 0xe0, 0xf0, 0x99, 0xac, 0xb4, 0x6a, 0x10,
	0xd3, 0xf4, 0xfa, 0x17, 0xf1, 0x14, 0xf2, 0x96, 0x7a, 0xcd, 0x56, 0xcc, 0x52, 0x30, 0xd2, 0xf2,
	0x0d, 0xf2, 0xfa, 0x53, 0x6d, 0x28, 0xe2, 0x39, 0x2c, 0x1e, 0xa4, 0xa1, 0xe0, 0xa4, 0xa2, 0x71,
	0xb4, 0x7f, 0x81, 0x08, 0xd3, 0x2d, 0x8c, 0x43, 0xa5, 0x3b, 0x96, 0x70, 0xd2, 0xb0, 0x71, 0xd2,
	0x47, 0x43, 0x36, 0xa6, 0x95, 0x26, 0x29, 0xde, 0xd7, 0xf5, 0xfa, 0xf5, 0xaa, 0xd3, 0xb1, 0x4b,
	0x1f, 0x55, 0xac, 0x74, 0xc5, 0x5e, 0xaa, 0x0f, 0x52, 0xec, 0x5d, 0xa5, 0xd8, 0xac, 0x78, 0x43,
	0xdb, 0x73, 0xa9, 0xd8, 0x18, 0xb6, 0xab, 0xd4, 0x5b, 0x97, 0xa7, 0x16, 0xd7, 0x3f, 0x01, 0x00,
	0x00, 0xff, 0xff, 0xef, 0xb8, 0x26, 0x76, 0x53, 0x01, 0x00, 0x00,
}
